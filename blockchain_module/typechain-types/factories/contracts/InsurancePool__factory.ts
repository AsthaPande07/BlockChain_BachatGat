/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InsurancePool,
  InsurancePoolInterface,
} from "../../contracts/InsurancePool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Contribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Payout",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountPerMember",
        type: "uint256",
      },
    ],
    name: "triggerEmergencyPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ad28061010d6000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100f2578063d7bb99ba1461011d578063ecfb49a314610127578063f2fde38b1461015257610070565b806327e235e3146100755780636861899b146100b2578063715018a6146100db575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061062c565b61017b565b6040516100a99190610672565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d4919061071e565b610193565b005b3480156100e757600080fd5b506100f061030a565b005b3480156100fe57600080fd5b5061010761031e565b604051610114919061078d565b60405180910390f35b610125610347565b005b34801561013357600080fd5b5061013c6103f1565b6040516101499190610672565b60405180910390f35b34801561015e57600080fd5b506101796004803603810190610174919061062c565b6103f7565b005b60016020528060005260406000206000915090505481565b61019b61047a565b80838390506101aa91906107d7565b60025410156101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610876565b60405180910390fd5b60005b838390508110156102dd5783838281811061020f5761020e610896565b5b9050602002016020810190610224919061062c565b73ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610269573d6000803e3d6000fd5b507f5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a684848381811061029e5761029d610896565b5b90506020020160208101906102b3919061062c565b836040516102c29291906108c5565b60405180910390a180806102d5906108ee565b9150506101f1565b5080838390506102ed91906107d7565b600260008282546102fe9190610936565b92505081905550505050565b61031261047a565b61031c60006104f8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610396919061096a565b9250508190555034600260008282546103af919061096a565b925050819055507f4d154d4aae216bed6d0926db77c00df2b57c6b5ba4eee05775de20facede3a7b33346040516103e79291906108c5565b60405180910390a1565b60025481565b6103ff61047a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590610a10565b60405180910390fd5b610477816104f8565b50565b6104826105bc565b73ffffffffffffffffffffffffffffffffffffffff166104a061031e565b73ffffffffffffffffffffffffffffffffffffffff16146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90610a7c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105f9826105ce565b9050919050565b610609816105ee565b811461061457600080fd5b50565b60008135905061062681610600565b92915050565b600060208284031215610642576106416105c4565b5b600061065084828501610617565b91505092915050565b6000819050919050565b61066c81610659565b82525050565b60006020820190506106876000830184610663565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106b2576106b161068d565b5b8235905067ffffffffffffffff8111156106cf576106ce610692565b5b6020830191508360208202830111156106eb576106ea610697565b5b9250929050565b6106fb81610659565b811461070657600080fd5b50565b600081359050610718816106f2565b92915050565b600080600060408486031215610737576107366105c4565b5b600084013567ffffffffffffffff811115610755576107546105c9565b5b6107618682870161069c565b9350935050602061077486828701610709565b9150509250925092565b610787816105ee565b82525050565b60006020820190506107a2600083018461077e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107e282610659565b91506107ed83610659565b92508282026107fb81610659565b91508282048414831517610812576108116107a8565b5b5092915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b6000610860601083610819565b915061086b8261082a565b602082019050919050565b6000602082019050818103600083015261088f81610853565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506108da600083018561077e565b6108e76020830184610663565b9392505050565b60006108f982610659565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361092b5761092a6107a8565b5b600182019050919050565b600061094182610659565b915061094c83610659565b9250828203905081811115610964576109636107a8565b5b92915050565b600061097582610659565b915061098083610659565b9250828201905080821115610998576109976107a8565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006109fa602683610819565b9150610a058261099e565b604082019050919050565b60006020820190508181036000830152610a29816109ed565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a66602083610819565b9150610a7182610a30565b602082019050919050565b60006020820190508181036000830152610a9581610a59565b905091905056fea2646970667358221220d7a24ae29265cc48483206219af38fb8fdc03f42c9e366a0166e0da04ceabfc364736f6c63430008140033";

type InsurancePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsurancePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsurancePool__factory extends ContractFactory {
  constructor(...args: InsurancePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InsurancePool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InsurancePool__factory {
    return super.connect(runner) as InsurancePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsurancePoolInterface {
    return new Interface(_abi) as InsurancePoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InsurancePool {
    return new Contract(address, _abi, runner) as unknown as InsurancePool;
  }
}
