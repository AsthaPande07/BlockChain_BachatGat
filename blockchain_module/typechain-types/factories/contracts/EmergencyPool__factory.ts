/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EmergencyPool,
  EmergencyPoolInterface,
} from "../../contracts/EmergencyPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "ClaimSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ClaimVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsuranceReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsuranceWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "adminWithdrawInsurance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "address",
        name: "claimant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "evidenceURI",
        type: "string",
      },
      {
        internalType: "enum EmergencyPool.ClaimStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "submittedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "verifiedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimsByRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimsByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    name: "getClaim",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "claimant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "round",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "eventId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "evidenceURI",
            type: "string",
          },
          {
            internalType: "enum EmergencyPool.ClaimStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "submittedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verifiedAt",
            type: "uint256",
          },
        ],
        internalType: "struct EmergencyPool.Claim",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "getClaimsForRound",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "getClaimsOfUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "insuranceBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextClaimId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveInsuranceContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "evidenceURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "submitClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "verifyClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200255a3803806200255a8339818101604052810190620000379190620001e3565b620000576200004b6200009960201b60201c565b620000a160201b60201c565b600180819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000215565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000197826200016a565b9050919050565b6000620001ab826200018a565b9050919050565b620001bd816200019e565b8114620001c957600080fd5b50565b600081519050620001dd81620001b2565b92915050565b600060208284031215620001fc57620001fb62000165565b5b60006200020c84828501620001cc565b91505092915050565b60805161232262000238600039600081816108170152610d0501526123226000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a0021cf111610097578063cf4cd4a811610066578063cf4cd4a8146102b3578063f2fde38b146102e3578063f3829dc7146102ff578063fc0c546a1461032f57610100565b8063a0021cf114610227578063a888c2cd14610245578063b1fd97631461027b578063b46498061461029757610100565b80635aef2447116100d35780635aef24471461019f578063715018a6146101cf5780638da5cb5b146101d95780639a4329a9146101f757610100565b80630577d6d5146101055780631ac2a0cc1461012357806333dec7a61461013f57806356d9dda81461016f575b600080fd5b61010d61034d565b60405161011a9190611265565b60405180910390f35b61013d600480360381019061013891906112b6565b610353565b005b61015960048036038101906101549190611341565b6103bd565b604051610166919061142c565b60405180910390f35b6101896004803603810190610184919061144e565b610454565b6040516101969190611265565b60405180910390f35b6101b960048036038101906101b491906112b6565b610485565b6040516101c69190611659565b60405180910390f35b6101d76105fd565b005b6101e1610611565b6040516101ee919061168a565b60405180910390f35b610211600480360381019061020c91906112b6565b61063a565b60405161021e919061142c565b60405180910390f35b61022f6106a5565b60405161023c9190611265565b60405180910390f35b61025f600480360381019061025a91906112b6565b6106ab565b604051610272979695949392919061170d565b60405180910390f35b61029560048036038101906102909190611783565b6107a2565b005b6102b160048036038101906102ac91906117fb565b6108b5565b005b6102cd60048036038101906102c891906118cc565b6109cc565b6040516102da9190611265565b60405180910390f35b6102fd60048036038101906102f89190611341565b610c4f565b005b61031960048036038101906103149190611940565b610cd2565b6040516103269190611265565b60405180910390f35b610337610d03565b60405161034491906119df565b60405180910390f35b60025481565b80600260008282546103659190611a29565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6606a652c87f1c19071c3ed524f700bf6bb5be5cacad0daa02fc0c57317c1f66826040516103b29190611265565b60405180910390a250565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561044857602002820191906000526020600020905b815481526020019060010190808311610434575b50505050509050919050565b6006602052816000526040600020818154811061047057600080fd5b90600052602060002001600091509150505481565b61048d6111e4565b600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201805461052590611a8c565b80601f016020809104026020016040519081016040528092919081815260200182805461055190611a8c565b801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b505050505081526020016004820160009054906101000a900460ff1660048111156105cc576105cb611546565b5b60048111156105de576105dd611546565b5b8152602001600582015481526020016006820154815250509050919050565b610605610d27565b61060f6000610da5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561069957602002820191906000526020600020905b815481526020019060010190808311610685575b50505050509050919050565b60035481565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201549080600301805461070090611a8c565b80601f016020809104026020016040519081016040528092919081815260200182805461072c90611a8c565b80156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b5050505050908060040160009054906101000a900460ff16908060050154908060060154905087565b6107aa610d27565b6107b2610e69565b6002548211156107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90611b09565b60405180910390fd5b81600260008282546108099190611b29565b9250508190555061085b81837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610eb89092919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f030a01aa653934ffdaf64d8bd90e1bae0c5dc0f14137194d7148d427431c3328836040516108a19190611265565b60405180910390a26108b1610f3e565b5050565b6108bd610d27565b6000600460008481526020019081526020016000209050600160048111156108e8576108e7611546565b5b8160040160009054906101000a900460ff16600481111561090c5761090b611546565b5b1461094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094390611ba9565b60405180910390fd5b8161095857600361095b565b60025b8160040160006101000a81548160ff0219169083600481111561098157610980611546565b5b0217905550428160060181905550827f9e8fe802f6bd854d92f147c664b81e4b4f9e780d622c36478a2b2ec78f748a40836040516109bf9190611bd8565b60405180910390a2505050565b6000806003600081546109de90611bf3565b91905081905590506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200187815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200160016004811115610a7757610a76611546565b5b815260200142815260200160008152506004600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003019081610b0a9190611e0c565b5060808201518160040160006101000a81548160ff02191690836004811115610b3657610b35611546565b5b021790555060a0820151816005015560c0820151816006015590505060056000848152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817f8d048d39ef7f7062de3d6bc15b83f64d107bd48756cfffa994b9cd7eebb9e3a48589604051610c3b929190611ede565b60405180910390a380915050949350505050565b610c57610d27565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90611f79565b60405180910390fd5b610ccf81610da5565b50565b60056020528160005260406000208181548110610cee57600080fd5b90600052602060002001600091509150505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b610d2f610f47565b73ffffffffffffffffffffffffffffffffffffffff16610d4d610611565b73ffffffffffffffffffffffffffffffffffffffff1614610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a90611fe5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea590612051565b60405180910390fd5b6002600181905550565b610f398363a9059cbb60e01b8484604051602401610ed7929190612071565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f4f565b505050565b60018081905550565b600033905090565b6000610fb1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110179092919063ffffffff16565b9050600081511480610fd3575080806020019051810190610fd291906120af565b5b611012576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110099061214e565b60405180910390fd5b505050565b6060611026848460008561102f565b90509392505050565b606082471015611074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106b906121e0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161109d9190612247565b60006040518083038185875af1925050503d80600081146110da576040519150601f19603f3d011682016040523d82523d6000602084013e6110df565b606091505b50915091506110f0878383876110fc565b92505050949350505050565b6060831561115e5760008351036111565761111685611171565b611155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114c906122aa565b60405180910390fd5b5b829050611169565b6111688383611194565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156111a75781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111db91906122ca565b60405180910390fd5b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008019168152602001606081526020016000600481111561123857611237611546565b5b815260200160008152602001600081525090565b6000819050919050565b61125f8161124c565b82525050565b600060208201905061127a6000830184611256565b92915050565b600080fd5b600080fd5b6112938161124c565b811461129e57600080fd5b50565b6000813590506112b08161128a565b92915050565b6000602082840312156112cc576112cb611280565b5b60006112da848285016112a1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061130e826112e3565b9050919050565b61131e81611303565b811461132957600080fd5b50565b60008135905061133b81611315565b92915050565b60006020828403121561135757611356611280565b5b60006113658482850161132c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113a38161124c565b82525050565b60006113b5838361139a565b60208301905092915050565b6000602082019050919050565b60006113d98261136e565b6113e38185611379565b93506113ee8361138a565b8060005b8381101561141f57815161140688826113a9565b9750611411836113c1565b9250506001810190506113f2565b5085935050505092915050565b6000602082019050818103600083015261144681846113ce565b905092915050565b6000806040838503121561146557611464611280565b5b60006114738582860161132c565b9250506020611484858286016112a1565b9150509250929050565b61149781611303565b82525050565b6000819050919050565b6114b08161149d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114f05780820151818401526020810190506114d5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611518826114b6565b61152281856114c1565b93506115328185602086016114d2565b61153b816114fc565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061158657611585611546565b5b50565b600081905061159782611575565b919050565b60006115a782611589565b9050919050565b6115b78161159c565b82525050565b600060e0830160008301516115d5600086018261148e565b5060208301516115e8602086018261139a565b5060408301516115fb60408601826114a7565b5060608301518482036060860152611613828261150d565b915050608083015161162860808601826115ae565b5060a083015161163b60a086018261139a565b5060c083015161164e60c086018261139a565b508091505092915050565b6000602082019050818103600083015261167381846115bd565b905092915050565b61168481611303565b82525050565b600060208201905061169f600083018461167b565b92915050565b6116ae8161149d565b82525050565b600082825260208201905092915050565b60006116d0826114b6565b6116da81856116b4565b93506116ea8185602086016114d2565b6116f3816114fc565b840191505092915050565b6117078161159c565b82525050565b600060e082019050611722600083018a61167b565b61172f6020830189611256565b61173c60408301886116a5565b818103606083015261174e81876116c5565b905061175d60808301866116fe565b61176a60a0830185611256565b61177760c0830184611256565b98975050505050505050565b6000806040838503121561179a57611799611280565b5b60006117a8858286016112a1565b92505060206117b98582860161132c565b9150509250929050565b60008115159050919050565b6117d8816117c3565b81146117e357600080fd5b50565b6000813590506117f5816117cf565b92915050565b6000806040838503121561181257611811611280565b5b6000611820858286016112a1565b9250506020611831858286016117e6565b9150509250929050565b6118448161149d565b811461184f57600080fd5b50565b6000813590506118618161183b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261188c5761188b611867565b5b8235905067ffffffffffffffff8111156118a9576118a861186c565b5b6020830191508360018202830111156118c5576118c4611871565b5b9250929050565b600080600080606085870312156118e6576118e5611280565b5b60006118f487828801611852565b945050602085013567ffffffffffffffff81111561191557611914611285565b5b61192187828801611876565b93509350506040611934878288016112a1565b91505092959194509250565b6000806040838503121561195757611956611280565b5b6000611965858286016112a1565b9250506020611976858286016112a1565b9150509250929050565b6000819050919050565b60006119a56119a061199b846112e3565b611980565b6112e3565b9050919050565b60006119b78261198a565b9050919050565b60006119c9826119ac565b9050919050565b6119d9816119be565b82525050565b60006020820190506119f460008301846119d0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a348261124c565b9150611a3f8361124c565b9250828201905080821115611a5757611a566119fa565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611aa457607f821691505b602082108103611ab757611ab6611a5d565b5b50919050565b7f696e73756666696369656e740000000000000000000000000000000000000000600082015250565b6000611af3600c836116b4565b9150611afe82611abd565b602082019050919050565b60006020820190508181036000830152611b2281611ae6565b9050919050565b6000611b348261124c565b9150611b3f8361124c565b9250828203905081811115611b5757611b566119fa565b5b92915050565b7f6261642073746174650000000000000000000000000000000000000000000000600082015250565b6000611b936009836116b4565b9150611b9e82611b5d565b602082019050919050565b60006020820190508181036000830152611bc281611b86565b9050919050565b611bd2816117c3565b82525050565b6000602082019050611bed6000830184611bc9565b92915050565b6000611bfe8261124c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c3057611c2f6119fa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ccc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c8f565b611cd68683611c8f565b95508019841693508086168417925050509392505050565b6000611d09611d04611cff8461124c565b611980565b61124c565b9050919050565b6000819050919050565b611d2383611cee565b611d37611d2f82611d10565b848454611c9c565b825550505050565b600090565b611d4c611d3f565b611d57818484611d1a565b505050565b5b81811015611d7b57611d70600082611d44565b600181019050611d5d565b5050565b601f821115611dc057611d9181611c6a565b611d9a84611c7f565b81016020851015611da9578190505b611dbd611db585611c7f565b830182611d5c565b50505b505050565b600082821c905092915050565b6000611de360001984600802611dc5565b1980831691505092915050565b6000611dfc8383611dd2565b9150826002028217905092915050565b611e15826114b6565b67ffffffffffffffff811115611e2e57611e2d611c3b565b5b611e388254611a8c565b611e43828285611d7f565b600060209050601f831160018114611e765760008415611e64578287015190505b611e6e8582611df0565b865550611ed6565b601f198416611e8486611c6a565b60005b82811015611eac57848901518255600182019150602085019450602081019050611e87565b86831015611ec95784890151611ec5601f891682611dd2565b8355505b6001600288020188555050505b505050505050565b6000604082019050611ef36000830185611256565b611f0060208301846116a5565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f636026836116b4565b9150611f6e82611f07565b604082019050919050565b60006020820190508181036000830152611f9281611f56565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fcf6020836116b4565b9150611fda82611f99565b602082019050919050565b60006020820190508181036000830152611ffe81611fc2565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061203b601f836116b4565b915061204682612005565b602082019050919050565b6000602082019050818103600083015261206a8161202e565b9050919050565b6000604082019050612086600083018561167b565b6120936020830184611256565b9392505050565b6000815190506120a9816117cf565b92915050565b6000602082840312156120c5576120c4611280565b5b60006120d38482850161209a565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612138602a836116b4565b9150612143826120dc565b604082019050919050565b600060208201905081810360008301526121678161212b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006121ca6026836116b4565b91506121d58261216e565b604082019050919050565b600060208201905081810360008301526121f9816121bd565b9050919050565b600081519050919050565b600081905092915050565b600061222182612200565b61222b818561220b565b935061223b8185602086016114d2565b80840191505092915050565b60006122538284612216565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612294601d836116b4565b915061229f8261225e565b602082019050919050565b600060208201905081810360008301526122c381612287565b9050919050565b600060208201905081810360008301526122e481846116c5565b90509291505056fea26469706673582212200de39c311c49cee29fcbcf1cf129d3a87ba570e6bf12aac4fa0e5ef7d9c88e1364736f6c63430008140033";

type EmergencyPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmergencyPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmergencyPool__factory extends ContractFactory {
  constructor(...args: EmergencyPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      EmergencyPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EmergencyPool__factory {
    return super.connect(runner) as EmergencyPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmergencyPoolInterface {
    return new Interface(_abi) as EmergencyPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EmergencyPool {
    return new Contract(address, _abi, runner) as unknown as EmergencyPool;
  }
}
